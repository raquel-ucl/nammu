<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>uk.ac.ucl.rc.development.oracc</groupId>
	<artifactId>nammu</artifactId>
	<version>0.0.4-prerelease</version>
	<packaging>jar</packaging>

	<name>nammu</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.python</groupId>
			<artifactId>jython-standalone</artifactId>
			<version>2.7.1b3</version>
		</dependency>
		<dependency>
			<groupId>info.cukes</groupId>
			<artifactId>cucumber-jython</artifactId>
			<version>1.2.4</version>
		</dependency>
	</dependencies>

	<build>

		<resources>
			<resource>
				<directory>python</directory>
			</resource>
		</resources>

		<plugins>

			<!-- Make sure we delete all class files, not only those in the
			     target folder. -->
		    <plugin>
			    <artifactId>maven-clean-plugin</artifactId>
			    <version>3.0.0</version>
			    <configuration>
			      <filesets>
					  <fileset>
				          <directory>./python</directory>
				          <includes>
						      <include>**/*py.class</include>
				          </includes>
					  </fileset>
			      </filesets>
			    </configuration>
		    </plugin>

			<!-- Make sure resources like toolbar icons are copied to final
			jar -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/resources</directory>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- A little outdated plugin needed to import all the python
			modules needed by pyoracc. It works using easy_install + <param>.	-->
			<plugin>
				<groupId>net.sf.mavenjython</groupId>
				<artifactId>jython-compile-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<id>before-tests</id>
						<phase>test-compile</phase>
						<goals>
							<goal>jython</goal>
						</goals>
					</execution>
					<execution>
						<id>packaging</id>
						<phase>package</phase>
						<goals>
							<goal>jython</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
                    <libraries>
                        <param>pyyaml</param>
						<param>requests</param>
						<param>pytest</param>
						<param>mako</param>
						<param>ply</param>
						<param>https://github.com/ucl/pyoracc/archive/master.tar.gz</param>
					</libraries>
				</configuration>
			</plugin>

			<!-- Aggregate the project output along with its dependencies, and
			other files into a single distributable archive. Note if this plugin
			is not used, jython.jar which is essential won't be attached and
			Nammu won't work. -->
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>uk.ac.ucl.rc.development.oracc.nammu.App</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<!-- The jar-with-dependencies is our main distributable jar, so
					give it a sensible name and remove the default suffix
					reated by this plugin -->
					<appendAssemblyId>false</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>

	</build>

	<reporting>
		<plugins>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.15</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>3.0.3</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.5</version>
			</plugin>

		</plugins>
	</reporting>

</project>
